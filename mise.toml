[tools]
# Core runtime dependencies
python = "3.10.13"
node = "23"

# Python development tools
uv = "latest"
ruff = "latest"

# Node development tools
pnpm = "latest"
biome = "latest"

# Database and DevOps tools
docker-compose = "latest"


[env]
# Environment variables
PYTHONPATH = "$PWD:$PYTHONPATH"
PYTHONUNBUFFERED = "1"

[tasks]
# Backend tasks
backend-setup = "cd backend && uv sync && source .venv/bin/activate"
backend-dev = "cd backend && fastapi dev app/main.py"
backend-test = "cd backend && bash ./scripts/test.sh"
backend-test-watch = "cd backend && python -m pytest -xvs --watch"
backend-lint = "cd backend && uv run ruff check . --fix"
backend-migration = "docker compose exec backend bash -c \"alembic revision --autogenerate -m '{{1}}'\""
backend-migrate = "docker compose exec backend bash -c \"alembic upgrade head\""

# Frontend tasks
frontend-setup = "cd frontend && npm install"
frontend-dev = "cd frontend && npm run dev"
frontend-build = "cd frontend && npm run build"
frontend-lint = "cd frontend && npm run lint"
frontend-test = "cd frontend && npx playwright test"
frontend-test-ui = "cd frontend && npx playwright test --ui"

# Docker tasks
dev = "docker compose watch"
docker-up = "docker compose up -d"
docker-down = "docker compose down"
docker-logs = "docker compose logs -f"
docker-ps = "docker compose ps"

# General tasks
generate-client = "./scripts/generate-client.sh"
generate-secret = "python -c \"import secrets; print(secrets.token_urlsafe(32))\""
security-check = "cd backend && uv pip audit && cd ../frontend && npm audit"

# Python settings
[settings.python]
venv_auto_create = true
venv_create_args = ["-p", "python3.10", ".venv"]

# Node settings - only use supported options
[settings.node]
flavor = "node"  # Default flavor